//
// Copyright (c) Phoenix Contact GmbH & Co. KG. All rights reserved.
// Licensed under the MIT. See LICENSE file in the project root for full license information.
// SPDX-License-Identifier: MIT
//
#pragma once
#include "Arp/System/Rsc/Services/RscServiceStubBase.hxx"
#include "IMqttClientService.hpp"

// DO NOT MODIFY THIS FILE, THIS FILE IS AUTOGENERATED BY IMqttClientService.cs

namespace PxceTcs { namespace MqttClient { namespace Services
{

using namespace Arp::System::Rsc::Services;

// forwards
class MqttClientServiceImpl;

class MqttClientServiceStub : public RscServiceStubBase<MqttClientServiceImpl>
{
public: // construction/destruction
    /// <summary>Constructs an <see cref="MqttClientServiceStub" /> instance.</summary>
    MqttClientServiceStub(MqttClientServiceImpl* pServiceImpl);
    /// <summary>Destructs this instance and frees all resouces.</summary>
    virtual ~MqttClientServiceStub(void);

public: // IServiceStub operations
    void    Invoke(int methodHandle, RscServerContext& context)override;

private: // IMqttClientService operations
    void Connect(RscServerContext& context);
    void CreateClient(RscServerContext& context);
    void DestroyClient(RscServerContext& context);
    void Disconnect(RscServerContext& context);
    void IsConnected(RscServerContext& context);
    void Publish(RscServerContext& context);
    void Reconnect(RscServerContext& context);
    void Subscribe(RscServerContext& context);
    void TryConsumeMessage(RscServerContext& context);
    void Unsubscribe(RscServerContext& context);

private: // deleted methods (for non-copyable classes)
    MqttClientServiceStub(const MqttClientServiceStub& arg) = delete;
    MqttClientServiceStub& operator=(const MqttClientServiceStub& arg) = delete;
};

///////////////////////////////////////////////////////////////////////////////
// inline methods of class MqttClientServiceStub
inline MqttClientServiceStub::~MqttClientServiceStub(void)
{
}

}}} // end of namespace PxceTcs::MqttClient::Services
